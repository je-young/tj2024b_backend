<<<<<<< HEAD
[연산자]
	1. 산술연산자 : +더하기 -빼기 *곱하기 /나누기 %나머지
	2. 연결연산자 : +연결연산자
	3. 비교연산자 : >초과 <미만 >=이상 <=이하 ==같다 !=다르다.
	4. 관계연산자 : && 이면서 || 이거나 !부정
	5. 증감연산자 : ++변수명 , 변수명++ , --변수명 , 변수명--
	6. 대입(복합) : 
		= 오른쪽 항 을 왼쪽변수 에 대입한다. 
		+= , -= *= /= %= : 오른쪽 항과 왼쪽 변수값과 연산후 결과를 왼쪽변수에 대입한다.
	7. 삼항연산자 : 
		조건? 참 : 거짓 
		조건1 ? 참1 : 조건2 ? 참2 : 거짓
  [연산자]
	1. 산술연산자 : +더하기 -빼기 *곱하기 /나누기 %나머지
	2. 연결연산자 : +연결연산자
	3. 비교연산자 : >초과 <미만 >=이상 <=이하 ==같다 !=다르다.
	4. 관계연산자 : && 이면서 || 이거나 !부정
	5. 증감연산자 : ++변수명 , 변수명++ , --변수명 , 변수명--
	6. 대입(복합) : 
		= 오른쪽 항 을 왼쪽변수 에 대입한다. 
		+= , -= *= /= %= : 오른쪽 항과 왼쪽 변수값과 연산후 결과를 왼쪽변수에 대입한다.
	7. 삼항연산자 : 
		조건? 참 : 거짓 
		조건1 ? 참1 : 조건2 ? 참2 : 거짓
  
=======
[콘솔 출력]
	1. System.out.println()
	2. System.out.print()
	3. System.out.printf()

[제어/이스케이프 문자]
	\n : 줄바꿈 , \t : 들여쓰기 , \" : "한개출력 , \' : '한개출력 , \\ : \한개출력
	
[형식 문자 ] , printf() 함수에서 사용되는 (형식)의미가 담긴 문자
	%s : 문자열 	, 	%c : 문자 
	%d : 정수 	,	%f : 실수
	[ 자릿수 맞추기 ]
		%자릿수d : 자릿수만큼 자릿수 차지 , 만일 비어 있으면 공백처리 , 오른쪽정렬 
		%-자릿수d : 자릿수만큼 자릿수 차지 , 만일 비어 있으면 공백처리 , 왼쪽정렬 
		%0자릿수d : 자릿수만큼 자릿수 차지 , 만일 비어 있으면 '0'처리 
	[ 소수점 자릿수 맞추기 ]
		%자릿수.소수점자릿수f	: 자릿수(소수점포함전체)만큼 자릿수 차지 , 소수점은 소수점자릿수까지 표시한다.
	
[콘솔 입력]
	1.준비물 : Scanner scan = new Scanner(System.in); 
		- 입력객체 생성시 주의할점 : class파일의 1개만 존재해도 여러번 입력받을수 있다.
		- Scanner 클래스 입력시 코드파일 최상단에 import java.util.Scanner;  ,  
			-> Scanner 클래스 입력시 자동완성시 import도 자동으로 생성된다.
			-> import란 다른 패키지/폴더의 클래스를 가져온다는 코드 , 예외] java.lang패키지( 기본클래스 모임 ) 

	2.사용 : scan.nextXXX()
		- 입력함수 종류  
		.next() , .nextLine() , .nextByte() , .nextShort() , 
		.nextInt() , .nextLong(), .nextFloat() , .nextDouble() 등등 
		
	3. 주의할점
		1. .nextLine() 은 개행(엔터)까지 포함해서 인식함으로 nextLine() 앞에 다른 nextXXX() 존재하면 하나로 인식된다.
			- 해결방법 : 의미없는 scan.nextLine() 중간에 작성하므로 구분 만들기.
			
		2. InputMismatchException : 입력함수 반환타입과 키보드로부터 입력한 데이터가 허용범위 벗어남 
			- 해결방법 : 코드에 입력한 입력함수 반환타입에 맞게 키보드로부터 데이터를 잘(타입에맞게) 입력한다. 
	
>>>>>>> branch 'master' of https://github.com/je-young/tj2024b_backend
	
	
	
	
	
	
	
	
	
	
	
	
	